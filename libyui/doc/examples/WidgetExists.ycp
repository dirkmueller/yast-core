{

    /**
     * Return a text summary of existing buttons.
     **/
    define string Summary() ``{
	
	string summary = 
	    ( UI::WidgetExists(`id(`top    ) ) ? "Top button exists"      : "No top button"      ) +
	    ( UI::WidgetExists(`id(`center ) ) ? "\nCenter button exists" : "\nNo center button" )	+
	    ( UI::WidgetExists(`id(`bottom ) ) ? "\nBottom button exists" : "\nNo bottom button" );

	return summary;

    };

    /**
     * Remove button with given id and update summary.
     **/
    define void RemoveButton( term id ) ``{
	UI::ReplaceWidget( id, `Empty() );
	UI::ChangeWidget( `id(`summary), `Value, Summary() );
	UI::RecalcLayout();
    }


    /**
     * main
     **/
    
    UI::OpenDialog(
	       `VBox(
		     `ReplacePoint( `id(`rp_top    ), `PushButton(`id(`top    ), "Top Button"    ) ),
		     `ReplacePoint( `id(`rp_center ), `PushButton(`id(`center ), "Center Button" ) ),
		     `ReplacePoint( `id(`rp_bottom ), `PushButton(`id(`bottom ), "Bottom Button" ) ),
		     `VSpacing( 1 ),
		     `Label(`id(`summary), "" ),
		     `VSpacing( 1 ),
		     `PushButton(`id(`close), "&Close")
		     )
	       );

    // Better wait until now before doing the summary - it isn't much use before UI::OpenDialog()
    // since of course all UI::WidgetExists() calls return false until then.
    UI::ChangeWidget( `id(`summary), `Value, Summary() );
    UI::RecalcLayout();
    
    any button = nil;

    repeat
    {
	button = UI::UserInput();

	if	( button == `top    ) 	RemoveButton(`id(`rp_top    ) );
	else if	( button == `center )	RemoveButton(`id(`rp_center ) );
	else if	( button == `bottom )	RemoveButton(`id(`rp_bottom ) );
    } until ( button == `close );

    UI::CloseDialog();
}
