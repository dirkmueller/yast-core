// Basic example of using the Wizard widget.
//
// Note: YCP applications are discouraged from using the Wizard widget directly.
// Use the Wizard module instead.

{
    if ( ! UI::HasSpecialWidget(`Wizard) )
    {
	y2error( "This works only with UIs that provide the wizard widget!" );
	return;
    }
    
    string help_text =
	"<p>This is a help text.</p>" 
	+ "<p>It should be helpful.</p>"
	+ "<p>If it isn't helpful, it should rather not be called a <i>help text</i>.</p>";
	
    UI::OpenDialog(`opt(`defaultsize ),
		   `Wizard(`id(`wiz), `opt(`stepsEnabled),
			   `back,  "&Back",
			   `abort, "Ab&ort",
			   `next,  "&Next" ) );

    // UI::DumpWidgetTree();

    UI::WizardCommand(`wiz, `SetVerboseCommands( true ) );
    UI::WizardCommand(`wiz, `SetDialogIcon( "/usr/share/YaST2/images/user_add.png" ) );
    UI::WizardCommand(`wiz, `SetDialogHeading( "Welcome to the YaST2 installation" ) );
    UI::WizardCommand(`wiz, `SetHelpText( help_text ) );
    UI::WizardCommand(`wiz, `SetAbortButtonLabel( "&Cancel" ) );
    UI::WizardCommand(`wiz, `SetBackButtonLabel( "" ) );
    UI::WizardCommand(`wiz, `SetNextButtonLabel( "&Accept" ) );
    
    while( true )
    {
	map event = UI::WaitForEvent();

	y2milestone( "Got event: %1", event );

	if ( event[ "ID" ]:nil == `abort )
	    break;

	integer	serial	= (integer) event[ "EventSerialNo" ]:0;
	string	type	= (string)  event[ "EventType"     ]:"";
	symbol	id	= (symbol)  event[ "ID"            ]:`nil;

	
	UI::ReplaceWidget(`id(`contents),
			  `VBox(
				`Heading( "Caught event:" ),
				`VSpacing(0.5),
				`Label( "Serial No: "	+ tostring( serial ) ),
				`Label( "Type: "	+ type   ),
				`Label( "ID: "		+ tostring( id ) )
				) );
    }
    
    UI::CloseDialog();
    
}
