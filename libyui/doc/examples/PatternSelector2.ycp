// Full-fledged pattern selection
{
    void detailedSelection()
    {
	// Open empty dialog for instant feedback
	
	UI::OpenDialog(`opt(`defaultsize),
		       `ReplacePoint(`id( `rep),
				     `Label( "Reading package database..." )
				     )
		       );

	// This will take a while: Detailed package data are retrieved
	// while the package manager is initialized  
	UI::ReplaceWidget(`rep, `PackageSelector(`id(`packages ), "/dev/fd0" ) );
		
	symbol input = (symbol) UI::RunPkgSelection(`id(`packages ) );
	y2milestone( "Package selector returned  %1", input );
	UI::CloseDialog();
	    
    }


    
    if ( ! UI::HasSpecialWidget(`PatternSelector ) )
    {
	detailedSelection();	// Fallback: Do detailed selection right away
	return;
    }

    
    UI::OpenDialog(`opt(`defaultsize ),
		   `Wizard(`back,   "",
			   `cancel, "&Cancel",
			   `ok,     "&OK" ) );

    string help_text = "Help text needs to be written";

    UI::WizardCommand(`SetDialogIcon( "/usr/share/YaST2/theme/SuSELinux/icons/22x22/apps/yast-software.png" ) );
    UI::WizardCommand(`SetDialogHeading( "Software Selection" ) );
    UI::WizardCommand(`SetHelpText( help_text ) );
    
    Pkg::TargetInit( "/",	// installed system
		     false ); 	// don't create a new RPM database

    UI::ReplaceWidget(`id(`contents), `PatternSelector(`id(`patterns ) ) );

    
    symbol button = nil;

    repeat
	{
	    button = (symbol) UI::RunPkgSelection(`id(`patterns ) );
	    y2milestone( "Pattern selector returned %1", button );

	    if ( button == `details )
		detailedSelection();
	    
	} until ( button == `cancel || button == `accept );
    
    UI::CloseDialog();
}
