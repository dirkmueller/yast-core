struct hashentry
{
    /**
     * Name of the builtin function. This structure element must be called
     * name, als long as gperf is not told otherwise.
     */
    char *name;

    /**
     * Pointer to a function that evaluates the term. Unfortunately this can't
     * be a member function of YCPInterpreter, since there is no way to make
     * a pointer to a member function.
     * @param interpreter the pointer to the YCPInterpreter. This is needed for
     * access to variables and definitions.
     * @param args argument list for function
     */
    YCPValue (*evaluate)(YCPInterpreter *interpreter, const YCPList &args);
};
%%
contains,	evaluateContains
haskey,		evaluateHasKey
filter,		evaluateFilter
find,		evaluateFind
maplist,	evaluateMaplist
flatten,	evaluateFlatten
sort,		evaluateSort
toset,		evaluateToSet
tointeger,	evaluateToInteger
tofloat,	evaluateToFloat
tostring,	evaluateToString
topath,		evaluateToPath
toterm,		evaluateToTerm
crypt,		evaluateCrypt
cryptmd5,	evaluateCryptMD5
cryptbigcrypt,	evaluateCryptBigcrypt
cryptblowfish,	evaluateCryptBlowfish
timestring,	evaluateTimeString
substring,	evaluateSubString
findfirstnotof,	evaluateFindFirstNotOf
tolower,	evaluateToLower
toupper,	evaluateToUpper
toascii,	evaluateToASCII
filterchars,	evaluateFilterChars
deletechars,	evaluateRemoveChars
time,		evaluateTime
sleep,		evaluateSleep
random,		evaluateRandom
srandom,	evaluateSrandom
sformat,	evaluateSformat
issubstring,	evaluateIsSubString
findfirstof,	evaluateFindFirstOf
regexpmatch,    evaluateRegexpMatch
regexppos,      evaluateRegexpPos
splitstring,	evaluateSplitString
mergestring,	evaluateMergeString
mapmap,		evaluateMapmap
prepend,	evaluatePrepend
listmap,	evaluateListmap
findlastof,	evaluateFindLastOf
y2debug,	evaluateY2Debug
y2milestone,	evaluateY2Milestone
y2warning,	evaluateY2Warning
regexpsub,      evaluateRegexpSub
y2error,	evaluateY2Error
y2security,	evaluateY2Security
y2internal,	evaluateY2Internal
regexptokenize, evaluateRegexpTokenize
tohexstring,	evaluateToHexString
