ToDo

- constant naming scheme for member functions and variables
 This is code cleanup, and if we're get to it, we should improve
 type safety first. At least add comments why casting foo* to bar* works.

- pass full name of source file to ycode
- pass correct line number to ycode
 That is part of good error reporting. Not top priority.

- copy-on-write for lvalues
 Existing ycp code works without it.

- syntax and semantic documentation

- ycode compile (-c option)
- ycode output (-> Save() class member)
- ycode input (-> Load() class member)
 Optional features.

- UI declarations
- SCR declarations
- WFM declarations
 We urgently need this or something equivalent so that we can at least
 parse existing code base and discover other to-do's.


- bug # 11085 -> tostring() changes for integer and float
mfabian@gregory:~/c$ cat t.c
#include &lt;locale.h&gt;
#include &lt;ctype.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

int main() {
        if ( NULL == setlocale(LC_ALL,&quot;&quot;)) {
                printf(&quot;locale not supported by glibc\n&quot;);
                exit(1);
        }
        printf(&quot;%f\n&quot;,3.14);
}
mfabian@gregory:~/c$ gcc t.c -o t
mfabian@gregory:~/c$ LC_NUMERIC=en_GB ./t
3.140000
mfabian@gregory:~/c$ LC_NUMERIC=de_DE ./t
3,140000
mfabian@gregory:~/c$ LC_NUMERIC=en_GB.UTF-8 ./t
3.140000
mfabian@gregory:~/c$ LC_NUMERIC=de_DE.UTF-8 ./t
3,140000
mfabian@gregory:~/c$
