Parsed:
----------------------------------------------------------------------
"NON-TERMINAL YCP_DeclTerm"
----------------------------------------------------------------------
[Scanner] tests/errors/Notifications.ycp:20 Error: Undeclared identifier 'Symbol0002'
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:20 Unknown expression
[Scanner] tests/errors/Notifications.ycp:24 Error: bad octal constant
Parsed:
----------------------------------------------------------------------
"Hello world"
----------------------------------------------------------------------
[Interpreter] :0 No match for '+ (list(integer), list(integer))':
[Interpreter] :0 integer + (integer, integer)
[Interpreter] :0 float + (float, float)
[Interpreter] :0 string + (string, string)
[Interpreter] :0 string + (string, integer)
[Interpreter] :0 string + (string, path)
[Interpreter] :0 path + (path, path)
[Interpreter] :0 path + (path, string)
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:29 Binary operator not defined for this type
[Interpreter] :0 No match for '+ (map(integer), map(integer))':
[Interpreter] :0 integer + (integer, integer)
[Interpreter] :0 float + (float, float)
[Interpreter] :0 string + (string, string)
[Interpreter] :0 string + (string, integer)
[Interpreter] :0 string + (string, path)
[Interpreter] :0 path + (path, path)
[Interpreter] :0 path + (path, string)
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:34 Binary operator not defined for this type
[Scanner] tests/errors/Notifications.ycp:39 Error: Undeclared identifier 'ComposedString'
[Scanner] tests/errors/Notifications.ycp:39 Error: Undeclared identifier 'd'
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:39 undeclared identifier
[Scanner] tests/errors/Notifications.ycp:54 Error: Undeclared identifier 'InnerString'
Parsed:
----------------------------------------------------------------------
{
    // string OuterString
    // filename: "tests/errors/Notifications.ycp"
    string OuterString = "outer string";
    if (true)
    {
    // string InnerString
    string InnerString = "inner";
    InnerString = (InnerString + " string");
}
    return YError;
}
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:54 undeclared identifier
[Scanner] tests/errors/Notifications.ycp:60 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:60 Error: Expected 'boolean', seen 'void'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:60 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:61 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:61 Error: Expected 'boolean', seen 'integer'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:61 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:62 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:62 Error: Expected 'boolean', seen 'float'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:62 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:63 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:63 Error: Expected 'boolean', seen 'string'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:63 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:65 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:65 Error: Expected 'boolean', seen 'path'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:65 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:66 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:66 Error: Expected 'boolean', seen 'list(boolean)'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:66 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:68 Error: 'if' expression not boolean
[Scanner] tests/errors/Notifications.ycp:68 Error: Expected 'boolean', seen 'map(string)'.
Parsed:
----------------------------------------------------------------------
YError
----------------------------------------------------------------------
[Interpreter] tests/errors/Notifications.ycp:68 'if' expression not boolean
Parsed:
----------------------------------------------------------------------
{
    // list node1
    // list node2
    // list node3
    // list node4
    // list node5
    // list node6
    // list node7
    // filename: "tests/errors/Notifications.ycp"
    list node1 = [1, 2];
    list node2 = [3, 4];
    list node3 = [5, 6];
    list node4 = [node2, node3];
    list node5 = [node1, node4];
    list node6 = [7];
    list node7 = [node5, node6];
    return (select (node7, -1, nil) == nil);
}
----------------------------------------------------------------------
