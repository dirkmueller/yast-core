// Typed select and "is" optimization cooperate badly.
{
    define boolean isString (any a) ``{
	if (is (a, string))
	{
	    y2milestone ("%1 is a string", a);
	    return true;
	}
	else
	{
	    y2milestone ("%1 not a string", a);
	    return false;
	}
    }

    list(any) la = [3.14, "foo", 1];
    integer index = 1;
    any s = select (la, index, nil);

    return [
	!isString (la),

	isString (s),
	is (s, string),
	isString (select (la, index, nil)),
	is (select (la, index, nil), string), // optimization kicked in since typeof (nil) is 'void' which must be handled like 'any'
	];
}
