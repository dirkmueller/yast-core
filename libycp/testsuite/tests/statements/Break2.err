Parsed:
----------------------------------------------------------------------
{
    // integer dummy (list list_var)
    // integer i1
    // integer i2
    // integer i3
    // filename: "tests/statements/Break2.ycp"
    integer dummy (list list_var)
{
    // integer ret
    integer ret = 42;
    return (ret + foreach (integer entry, list_var, {
    if ((entry == 3))
    break;
    if ((entry == 4))
    return entry;
}
));
}
    integer i1 = dummy ([1, 2, 3]);
    integer i2 = dummy ([1, 2, 4]);
    integer i3 = dummy ([1, 2, 5]);
    return [i1, i2, i3];
}
----------------------------------------------------------------------
[Interpreter] tests/statements/Break2.ycp:5 Argument (foreach (integer entry, list_var, {
    if ((entry == 3))
    break;
    if ((entry == 4))
    return entry;
}
)) to +(...) evaluates to nil
[Interpreter] tests/statements/Break2.ycp:5 Argument (foreach (integer entry, list_var, {
    if ((entry == 3))
    break;
    if ((entry == 4))
    return entry;
}
)) to +(...) evaluates to nil
