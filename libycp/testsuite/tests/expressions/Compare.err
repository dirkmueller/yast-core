Parsed:
----------------------------------------------------------------------
"void"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((nil == nil) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"boolean"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((true == false) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((true != false) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((true == true) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((false != false) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((true && false) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((true || false) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"integer"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42 == 42) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42 == -42) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((-42 == -42) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((-42 != 42) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((42 / 7) == (4 + 2)) == ((42 / 7) == (4 + 2))) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((42 / 7) < (4 + 2)) == ((42 / 7) < (4 + 2))) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((42 / 7) > (4 + 2)) == ((42 / 7) > (4 + 2))) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((42 / 7) <= (4 + 2)) == ((42 / 7) <= (4 + 2))) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((42 / 7) >= (4 + 2)) == ((42 / 7) >= (4 + 2))) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"float"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(((0. - 4.2) != 4.2) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((100. == (1e+10 * 1e-08)) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42. > 42.) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42. >= 42.) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42. < 42.) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42. <= 42.) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42. == 42.) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((42. != 42.) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"string"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("gr\366\337er" < "kleiner") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("gr\366\377er" < "kleiner") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("gr\366\337er" <= "kleiner") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("gr\366\337er" > "kleiner") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("klein" > "kleiner") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("klein" >= "kleiner") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("klein" == "kleiner") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("Klein" == "Klein") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("Klein" != "Klein") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(("Klein" == "klein") == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((("string" + 100) == "string100") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((("string" + .path) == "string.path") == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"path"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((. + .current) + .path) == .current.path) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((((. + .current) + .path) == .current.path) != false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"list"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((["composed string", nil] == [("composed " + "string"), {
    // integer number
    // filename: "tests/expressions/Compare.ycp"
    integer number = 5;
}
]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((["composed string", nil] != [("composed " + "string"), {
    // integer number
    // filename: "tests/expressions/Compare.ycp"
    integer number = 5;
}
]) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([] == []) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1] == [1]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1] != [2]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1, 2, 3] > [1, 2]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1, 2] > [1, 1, 1]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1, "string"] > [1, 1, 1]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1, "string_long"] > [1, "string", 1]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1] < [{
    // integer number
    // filename: "tests/expressions/Compare.ycp"
    integer number = 2;
    return number;
}
]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(([1] > [{
    // integer number
    // filename: "tests/expressions/Compare.ycp"
    integer number = 2;
}
]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"term"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha () == `alpha ()) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha () < `alpha (1)) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) == `alpha (1)) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) < `beta (1)) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) < `alpha (2)) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) < `alpha (1, 1)) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) < `alpha (1, "string")) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) < {
    // term b
    // filename: "tests/expressions/Compare.ycp"
    term b = `beta (1);
    return b;
}
) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
((`alpha (1) > {
    // term b
    // filename: "tests/expressions/Compare.ycp"
    term b = `beta (1);
}
) == nil)
----------------------------------------------------------------------
[Interpreter] tests/expressions/Compare.ycp:103 Nil can be compared only for equality and non-equality
Parsed:
----------------------------------------------------------------------
"map"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(($[] == $[]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(($["a":1] == $["a":1]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(($["a":1] > $[]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(($["a":1, "b":2] < $["a":1, "b":3]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(($["a":1, "c":2] > $["a":1, "b":3]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(($["a":1, "b":2] > $["z":9]) == true)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"locale"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // filename: "tests/expressions/Compare.ycp"
    textdomain "locale";
    return (_("a") < _("b"));
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // filename: "tests/expressions/Compare.ycp"
    textdomain "locale";
    return (_("a") < _("aa"));
}
----------------------------------------------------------------------
[Scanner] tests/expressions/Compare.ycp:119 Warning: Empty locale constant
Parsed:
----------------------------------------------------------------------
{
    // filename: "tests/expressions/Compare.ycp"
    textdomain "locale";
    return ("" < _("a"));
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"nil"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // string val
    // filename: "tests/expressions/Compare.ycp"
    string val = nil;
    return (val == nil);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // string val
    // filename: "tests/expressions/Compare.ycp"
    string val = nil;
    return ! (val != nil);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // string val
    // filename: "tests/expressions/Compare.ycp"
    string val = nil;
    return ! (val == "foo");
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // string val
    // filename: "tests/expressions/Compare.ycp"
    string val = nil;
    return (val != "foo");
}
----------------------------------------------------------------------
