Parsed:
----------------------------------------------------------------------
{
    // term node1
    // term node2
    // term node3
    // term node4
    // term node5
    // term node6
    // term node7
    // filename: "tests/expressions/Select_Term.ycp"
    term node1 = `Termified (`Austria, `Belgium);
    term node2 = `Termified (`China, `D_Nation);
    term node3 = `Termified (`England, `France);
    term node4 = `Termified (node2, node3);
    term node5 = `Termified (node1, node4);
    term node6 = `Termified (`Greece, nil);
    term node7 = `Termified (node5, node6);
    return (select (node1, 0, nil) == `Austria);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // term node1
    // term node2
    // term node3
    // term node4
    // term node5
    // term node6
    // term node7
    // filename: "tests/expressions/Select_Term.ycp"
    term node1 = `Termified (`Austria, `Belgium);
    term node2 = `Termified (`China, `D_Nation);
    term node3 = `Termified (`England, `France);
    term node4 = `Termified (node2, node3);
    term node5 = `Termified (node1, node4);
    term node6 = `Termified (`Greece, nil);
    term node7 = `Termified (node5, node6);
    return (select (node2, 0, nil) == `China);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // term node1
    // term node2
    // term node3
    // term node4
    // term node5
    // term node6
    // term node7
    // filename: "tests/expressions/Select_Term.ycp"
    term node1 = `Termified (`Austria, `Belgium);
    term node2 = `Termified (`China, `D_Nation);
    term node3 = `Termified (`England, `France);
    term node4 = `Termified (node2, node3);
    term node5 = `Termified (node1, node4);
    term node6 = `Termified (`Greece, nil);
    term node7 = `Termified (node5, node6);
    return (node6[1]:nil == nil);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // term node1
    // term node2
    // term node3
    // term node4
    // term node5
    // term node6
    // term node7
    // filename: "tests/expressions/Select_Term.ycp"
    term node1 = `Termified (`Austria, `Belgium);
    term node2 = `Termified (`China, `D_Nation);
    term node3 = `Termified (`England, `France);
    term node4 = `Termified (node2, node3);
    term node5 = `Termified (node1, node4);
    term node6 = `Termified (`Greece, nil);
    term node7 = `Termified (node5, node6);
    return (/* any -> term */node7[0, 1, 0]:`error () == node2);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // term node1
    // term node2
    // term node3
    // term node4
    // term node5
    // term node6
    // term node7
    // filename: "tests/expressions/Select_Term.ycp"
    term node1 = `Termified (`Austria, `Belgium);
    term node2 = `Termified (`China, `D_Nation);
    term node3 = `Termified (`England, `France);
    term node4 = `Termified (node2, node3);
    term node5 = `Termified (node1, node4);
    term node6 = `Termified (`Greece, nil);
    term node7 = `Termified (node5, node6);
    return (/* any -> const symbol */node7[0, 1, 1, 1]:`error == `France);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // term node1
    // term node2
    // term node3
    // term node4
    // term node5
    // term node6
    // term node7
    // filename: "tests/expressions/Select_Term.ycp"
    term node1 = `Termified (`Austria, `Belgium);
    term node2 = `Termified (`China, `D_Nation);
    term node3 = `Termified (`England, `France);
    term node4 = `Termified (node2, node3);
    term node5 = `Termified (node1, node4);
    term node6 = `Termified (`Greece, nil);
    term node7 = `Termified (node5, node6);
    return node7;
}
----------------------------------------------------------------------
