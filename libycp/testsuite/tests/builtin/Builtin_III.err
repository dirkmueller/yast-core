Parsed:
----------------------------------------------------------------------
(sort (integer x, integer y, [3, 6, 2, 8], { return (x <= y); }) == [2, 3, 6, 8])
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin_III.ycp:29 Parameter 'x' has unspecified type
[Interpreter] tests/builtin/Builtin_III.ycp:29 Parameter 'y' has unspecified type
Parsed:
----------------------------------------------------------------------
(sort (any x, any y, [1, 2, 1, 2], { return true; }) == [1, 2, 1, 2])
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin_III.ycp:30 Parameter 'x' has unspecified type
[Interpreter] tests/builtin/Builtin_III.ycp:30 Parameter 'y' has unspecified type
Parsed:
----------------------------------------------------------------------
(sort (any x, any y, [1, 2, 1, 2], { return (x <= y); }) == [1, 1, 2, 2])
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin_III.ycp:32 Parameter 'x' has unspecified type
[Interpreter] tests/builtin/Builtin_III.ycp:32 Parameter 'y' has unspecified type
Parsed:
----------------------------------------------------------------------
(sort (any x, any y, [1], { return (x <= y); }) == [1])
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin_III.ycp:33 Parameter 'x' has unspecified type
[Interpreter] tests/builtin/Builtin_III.ycp:33 Parameter 'y' has unspecified type
Parsed:
----------------------------------------------------------------------
(sort (any x, any y, [1, 1, 1, 1, (2 - 1), (1 * 1), (-1 * -1)], { return (x <= y); }) == [1, 1, 1, 1, 1, 1, 1])
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin_III.ycp:34 Parameter 'x' has unspecified type
[Interpreter] tests/builtin/Builtin_III.ycp:34 Parameter 'y' has unspecified type
Parsed:
----------------------------------------------------------------------
(sort (any x, any y, [], { return (x <= y); }) == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(sformat ("This is a text without placeholders") == "This is a text without placeholders")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(sformat ("%2 is greater %% than %1", 3, "five") == "five is greater % than 3")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(sformat ("I'll go th the event %1 today", sformat ("Abi %1", 99)) == "I'll go th the event Abi 99 today")
----------------------------------------------------------------------
No match for 'sformat : <unspec> (const integer)':
sformat:string (string, ...)
tests/builtin/Builtin_III.ycp:51:Bad parameter '<const integer> 42'
[Parser] tests/builtin/Builtin_III.ycp:51 Bad parameter '<const integer> 42'
Parsed:
----------------------------------------------------------------------
Parser error
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin_III.ycp:51 Parser error
Parsed:
----------------------------------------------------------------------
(findfirstnotof ("abcdefghi", "abcefghi") == 3)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(findfirstnotof ("abcdefghi", "") == 0)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("", "") == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("abc", "") == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("abc/def/ghi", "/") == ["abc", "def", "ghi"])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("/abc/def/ghi", "/") == ["", "abc", "def", "ghi"])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("abc/def/ghi/", "/") == ["abc", "def", "ghi", ""])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("abc/def/ghi/", "/a") == ["", "bc", "def", "ghi", ""])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("abc/def/ghi", ".") == ["abc/def/ghi"])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(splitstring ("/", "/") == ["", ""])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring ([], "") == "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring ([], "abc") == "")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring (["abc", "def", "ghi"], "/") == "abc/def/ghi")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring (["", "abc", "def", "ghi"], "/") == "/abc/def/ghi")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring (["abc", "def", "ghi", ""], "/") == "abc/def/ghi/")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring (["abc", "def", "ghi", ""], "/a") == "abc/adef/aghi/a")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(mergestring (["", ""], "/") == "/")
----------------------------------------------------------------------
