
# ---------------------------------------------------------
#
#  Filename:	Builtin-List.ycp
#
#  Purpose:	test cases for all list builtins
#
# ---------------------------------------------------------


("** equality **")

([1, 2] == [1, 2])
([] == [])
([1, 2, 3] == [1, 2])
([1, 2] == [])
([] == [1, 2])


("** inequality **")

([1, 2] != [1, 2])
([] != [])
([1, 2, 3] != [1, 2])
([1, 2] != [])
([] != [1, 2])


("** foreach **")

{
    // foreach without a return
    integer sum = 0;
    foreach (integer i, [1, 2, 4], ``{
	sum = sum + i;
    });
    return sum;
}

#find


("** prepend **")

(prepend ([1, 4], 8))
(prepend ([], 8))
# missing param
(prepend ([1]))
# excessive param
(prepend ([1], 2, 3))

("** contains **")

(contains ([1, 2, 5], 2))
(contains ([1, 2, 5], 3))
(contains ([], 3))


("** setcontains **")

(setcontains ([1, 2, 5], 2))
(setcontains ([1, 2, 5], 3))
(setcontains ([], 3))

("** union **")

(union ([1, 2], [3, 4]))
(union ([1, 2, 3], [2, 3, 4]))


("** merge **")

(merge ([1, 2], [3, 4]))
(merge ([1, 2, 3], [2, 3, 4]))


# filter

(maplist (integer v, [1, 2, 3, 5], ``(v + 1)))

(maplist (integer k, string v, $[1:"a", 2:"b"], ``([k+10, v+"x"])))

("** flatten **")

(flatten ([[1, 2], [3, 4]]))
(flatten ([[1, 2], []]))
(flatten ([[], [3, 4]]))


("** toset **")

(toset ([1, 5, 3, 2, 3, true, false, true]))


("** sort **")

(sort ([2, 1, true, 1]))
(sort (integer x, integer y, [ 3, 6, 2, 8 ], ``(x>y)))
(sort (`x, `y, [ 3, 6, 2, 8 ], ``(x>y)))


("** size **")

(size ([]))
(size ([1, 2, 3]))


("** splitstring **")

(splitstring ("/abc/dev/ghi", "/"))
(splitstring ("abc/dev/ghi/", "/"))
(splitstring ("abc/dev/ghi/", "."))


("** add **")

(add ([1, 4], 8))
(add ([], 8))


("** change **")

#deprecated for lists 
(change ([1, 4], 8))


("** remove **")

(remove ([1, 2], 0))
(remove ([], 0))


("** select **")

(select ([1, 2], -1, 42))
(select ([1, 2], 0, 42))
(select ([1, 2], 1, 42))
(select ([1, 2], 3, 42))
(select ([1, "two"], 0, "wrong type"))

