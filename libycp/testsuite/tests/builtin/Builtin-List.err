Parsed:
----------------------------------------------------------------------
"** equality **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([1, 2] == [1, 2])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([] == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([1, 2, 3] == [1, 2])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([1, 2] == [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([] == [1, 2])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** inequality **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([1, 2] != [1, 2])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([] != [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([1, 2, 3] != [1, 2])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([1, 2] != [])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
([] != [1, 2])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** foreach **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // integer sum
    // filename: "tests/builtin/Builtin-List.ycp"
    integer sum = 0;
    foreach (integer i, [1, 2, 4], {
    sum = (sum + i);
}
);
    return sum;
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** prepend **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
prepend ([1, 4], 8)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
prepend ([], 8)
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin-List.ycp:48 No match for 'prepend : <unspec> (list <const integer>)'
[Interpreter] tests/builtin/Builtin-List.ycp:48 Please fix parameter types to match one of:
[Interpreter] tests/builtin/Builtin-List.ycp:48 'prepend : list <<T>> (const list <<T>>, const <T>)' 
[Parser] tests/builtin/Builtin-List.ycp:48 Wrong parameters in call to prepend(...)
[Parser] tests/builtin/Builtin-List.ycp:48 Expected '(const list <<T>>, const <T>)', seen '(list <const integer>)'.
Parsed:
----------------------------------------------------------------------
Parser error
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin-List.ycp:48 Parser error
[Interpreter] tests/builtin/Builtin-List.ycp:50 No match for 'prepend : <unspec> (list <const integer>, const integer, const integer)'
[Interpreter] tests/builtin/Builtin-List.ycp:50 Please fix parameter types to match one of:
[Interpreter] tests/builtin/Builtin-List.ycp:50 'prepend : list <<T>> (const list <<T>>, const <T>)' 
[Parser] tests/builtin/Builtin-List.ycp:50 Wrong parameters in call to prepend(...)
[Parser] tests/builtin/Builtin-List.ycp:50 Expected '(const list <<T>>, const <T>)', seen '(list <const integer>, const integer, const integer)'.
Parsed:
----------------------------------------------------------------------
Parser error
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin-List.ycp:50 Parser error
Parsed:
----------------------------------------------------------------------
"** contains **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
contains ([1, 2, 5], 2)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
contains ([1, 2, 5], 3)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
contains ([], 3)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** setcontains **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
setcontains ([1, 2, 5], 2)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
setcontains ([1, 2, 5], 3)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
setcontains ([], 3)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** union **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
union ([1, 2], [3, 4])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
union ([1, 2, 3], [2, 3, 4])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** merge **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
merge ([1, 2], [3, 4])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
merge ([1, 2, 3], [2, 3, 4])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
maplist (integer v, [1, 2, 3, 5], { return (v + 1); })
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
maplist (integer k, string v, $[1:"a", 2:"b"], { return [(k + 10), (v + "x")]; })
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** flatten **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
flatten ([[1, 2], [3, 4]])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
flatten ([[1, 2], []])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
flatten ([[], [3, 4]])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** toset **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
toset ([1, 5, 3, 2, 3, true, false, true])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** sort **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
sort ([2, 1, true, 1])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
sort (integer x, integer y, [3, 6, 2, 8], { return (x > y); })
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin-List.ycp:99 Parameter 'x' has unspecified type
[Interpreter] tests/builtin/Builtin-List.ycp:99 Parameter 'y' has unspecified type
Parsed:
----------------------------------------------------------------------
sort (any x, any y, [3, 6, 2, 8], { return (x > y); })
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** size **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
size ([])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
size ([1, 2, 3])
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** splitstring **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
splitstring ("/abc/dev/ghi", "/")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
splitstring ("abc/dev/ghi/", "/")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
splitstring ("abc/dev/ghi/", ".")
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** add **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
add ([1, 4], 8)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
add ([], 8)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
"** change **"
----------------------------------------------------------------------
[Scanner] tests/builtin/Builtin-List.ycp:124 Warning: change(...) is deprecated, please fix
Parsed:
----------------------------------------------------------------------
change ([1, 4], 8)
----------------------------------------------------------------------
[libycp] tests/builtin/Builtin-List.ycp:124 Change does not work as expected! The argument is not passed by reference.
Parsed:
----------------------------------------------------------------------
"** remove **"
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
remove ([1, 2], 0)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
remove ([], 0)
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin-List.ycp:130 Index 0 for remove () out of range
Parsed:
----------------------------------------------------------------------
"** select **"
----------------------------------------------------------------------
[Scanner] tests/builtin/Builtin-List.ycp:135 Warning: 'select ()' is deprecated
Parsed:
----------------------------------------------------------------------
[1, 2][-1]:42
----------------------------------------------------------------------
[Scanner] tests/builtin/Builtin-List.ycp:136 Warning: 'select ()' is deprecated
Parsed:
----------------------------------------------------------------------
[1, 2][0]:42
----------------------------------------------------------------------
[Scanner] tests/builtin/Builtin-List.ycp:137 Warning: 'select ()' is deprecated
Parsed:
----------------------------------------------------------------------
[1, 2][1]:42
----------------------------------------------------------------------
[Scanner] tests/builtin/Builtin-List.ycp:138 Warning: 'select ()' is deprecated
Parsed:
----------------------------------------------------------------------
[1, 2][3]:42
----------------------------------------------------------------------
[Scanner] tests/builtin/Builtin-List.ycp:139 Warning: 'select ()' is deprecated
Parsed:
----------------------------------------------------------------------
/* any -> string */[1, "two"][0]:"wrong type"
----------------------------------------------------------------------
[Interpreter] tests/builtin/Builtin-List.ycp:130 Can't convert value '1' to type 'string'
