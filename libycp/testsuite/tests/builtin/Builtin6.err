Parsed:
----------------------------------------------------------------------
(contains ([1, 2, 3], -1) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
(contains ([1, 2, 3], 0) == false)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
contains ([1, 2, 3], 2)
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // list node1
    // list node2
    // list node3
    // list node4
    // list node5
    // list node6
    // list node7
    // filename: "tests/builtin/Builtin6.ycp"
    list node1 = [1, 2];
    list node2 = [3, 4];
    list node3 = [5, 6];
    list node4 = [node2, node3];
    list node5 = [node1, node4];
    list node6 = [7];
    list node7 = [node5, node6];
    return (contains (node7, node5) == true);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // list node1
    // list node2
    // list node3
    // list node4
    // list node5
    // list node6
    // list node7
    // filename: "tests/builtin/Builtin6.ycp"
    list node1 = [1, 2];
    list node2 = [3, 4];
    list node3 = [5, 6];
    list node4 = [node2, node3];
    list node5 = [node1, node4];
    list node6 = [7];
    list node7 = [node5, node6];
    return (contains (node7, node1) == false);
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // list node1
    // list node2
    // list node3
    // list node4
    // list node5
    // list node6
    // list node7
    // filename: "tests/builtin/Builtin6.ycp"
    list node1 = [1, 2];
    list node2 = [3, 4];
    list node3 = [5, 6];
    list node4 = [node2, node3];
    list node5 = [node1, node4];
    list node6 = [7];
    list node7 = [node5, node6];
    return node7;
}
----------------------------------------------------------------------
Parsed:
----------------------------------------------------------------------
{
    // filename: "tests/builtin/Builtin6.ycp"
    return "test case contains finished";
}
----------------------------------------------------------------------
