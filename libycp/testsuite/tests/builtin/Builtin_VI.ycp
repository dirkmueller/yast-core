
# ---------------------------------------------------------
#
#  Filename:    Builtin_VI.ycp
#
#  Purpose:     test cases for YCP test
#
#  Creator:     jd@suse.de
#
#  Maintainer:  jd@suse.de
#
# ---------------------------------------------------------

# ---------------- added 1999/12/1 ------------------------
# ---------------- select() removed on maps 1999/12/21 ----

//
//     builtin find(symbol s, list l, expression e) -> any
//
// Searches for a certain item in the list. It applies the expression
// e to each element in the list and returns the first element
// the makes the expression evaluate to true, if s is bound to
// that element. Returns nil, if none is found.
// 

( find(integer n, [3,5,6,4], ``(n >= 5)) == 5 )
( find(integer n, [3,6,5,4], ``(n >= 5)) == 6 )
( find(integer n, [3,4,-5], ``(n >= 5)) == nil )
( find(integer n, [], ``(n >= 5)) == nil )
( find(integer n, [], ``(true)) == nil )

( size( [] ) == 0 )
( size( $[ 1: "A", 2: `bb ] ) == 2 )
( size( "KÃ¤sekuchen" ) == 10 )

// uses select, because operator '==' is not defined on maps
( find(any n, [ [], -1, $[ 1: "A", 2: `bb ], "KÃ¤sekuchen", 3.14, .a.path ], 
       {  if (is( n, list)) return (size (tolist (n)) > 0);
	  else if (is( n, term)) return (size (toterm (n)) > 0);
	  else if (is( n, map)) return (size (tomap (n)) > 0);
	  else if (is( n, path)) return (size (topath (n)) > 0);
	  else if (is( n, string )) return (size (tostring (n)) > 0);
	  else return (false);
	})
  == $[ 1: "A", 2: `bb ] )

