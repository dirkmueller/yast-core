/**
 * File:	modules/Mode.ycp
 * Module:	yast2
 * Summary:	Installation mode
 * Authors:	Klaus Kaempf <kkaempf@suse.de>
 *
 * $Id$
 *
 * Provide installation mode information.
 * Mostly values from /etc/install.inf
 * See linuxrc documentation for detailed docs about this.
 */

{
    module "Mode";

    /**
     * we're doing a fresh installation
     */
    global boolean installation		= true;

    /**
     * we're doing an update
     */
    global boolean update		= false;

    /**
     * /var/adm/mount has installation data mounted
     */
    global boolean sourcemounted	= false;

    /**
     * how we were booted (the type of the installation medium)
     * /etc/install.inf: InstMode
     */
    global string boot			= "cd";

    /**
     * just testing
     */
    global boolean test			= false;

    /**
     * dry-run of dialogues
     */
    global boolean demo			= false; // includes test_mode if set

    /**
     * dump screens to /tmp
     */
    global boolean screen_shot		= false; // includes demo_mode if set

    /**
     * starting installation in inst-sys system
     */
    global boolean initial		= false;

    /**
     * continuing installation in target system
     */
    global boolean cont			= false;

    /**
     * normal, running system
     */
    global boolean normal		= false;

    /**
     * do auto-installation
     */
    global boolean autoinst		= false;

    /**
     * start repair module
     */
    global boolean repair		= false;

    /**
     * configuration for auto-installation, only in running system
     */
    global boolean config		= false;

    /**
     * Preparing live-eval cd installation
     */
    global boolean live_eval		= false;

    /**
     * this is a beta-version
     */
    global boolean beta			= false;

    /**
     * this is for certify labs (uses by Packages.ycp)
     */
    global boolean certify		= false;

    /**
     * no resources/packages for X11
     */
    global boolean text_fallback	= false;

    /**
     * somehow, no X11 was started
     */
    global boolean no_x11		= false;	// no x11 or not enough memory for qt

    /**
     * run X11 configuration after inital boot
     * this is false in case of:
     * installation via serial console
     * installation via ssh
     * installation via vnc
     *
     * Also see Arch::x11_setup_needed.
     */
    global boolean x11_setup_needed	= true;

    /**
     * This flag indicates that a config module has been called due to
     * a change in the system hardware that has been detected on boot
     * time.
     *
     * It is set if a parameter "reprobe" is given with a yast2 call as
     * command line argument.
     */
    global boolean reprobe		= false;

    /**
     * we're running in textmode (-> UI::GetDisplayInfo())
     */
    global boolean text			= false;

    /**
     * we're running in command line interface
     */
    global boolean commandline		= false;

    /**
     * we're running in manual mode (manual installation choosen in linuxrc)
     */
    global boolean manual		= false;

    /**
     * running via serial console
     */
    global boolean serial_console	= false;

    /**
     * braille mode ?
     */
    global boolean braille		= false;

    /**
     * vnc mode ?
     */
    global boolean vnc			= false;

    /**
     * ssh mode ?
     */
    global boolean usessh		= false;

    /**
     * install map containing data for the online update
     */
    global map youInstallMap		= $[];

    //---------------------------------------------------------------
    // constructor

    global define void Mode () ``{

	/*
	 * test command line arguments for test mode and continue mode
	 */

	integer arg_count = size(WFM::Args());
	integer arg_no = 0;

	while ( arg_no < arg_count )
	{
	    y2debug("option #%1: %2", arg_no, WFM::Args(arg_no) );

	    if	    (WFM::Args(arg_no) == "test"	   )
	    {
		test = true;
		y2warning("***** Test mode enabled *****");
	    }
	    else if (WFM::Args(arg_no) == "demo"	    )
	    {
		demo = true;
		y2warning("***** Demo mode enabled *****");
	    }
	    else if (WFM::Args(arg_no) == "screenshots"  )
	    {
		screen_shot = true;
		y2warning("***** Screen shot mode enabled *****");
	    }
	    else if (WFM::Args(arg_no) == "initial"	    ) initial	= true;
	    else if (WFM::Args(arg_no) == "continue"	    ) cont	= true;
	    else if (WFM::Args(arg_no) == "text_fallback") text_fallback= true;
	    else if (WFM::Args(arg_no) == "no_x11"       ) no_x11	= true;
	    else if (WFM::Args(arg_no) == "reprobe"      ) reprobe	= true;
	    else
	    {
		y2milestone ("skipping unknown option %1", WFM::Args(arg_no) );
	    }

	    arg_no = arg_no + 1;
	}


	if (!initial
	    && !cont
	    && !autoinst
	    && !config)
	{
	    normal = true;
	}

	// screen_shot ==> demo
	if ( screen_shot )	demo = true;

	// demo ==> test
	if ( demo )		test = true;


	// only use the /etc/install.inf agent when file is present

	if (SCR::Read (.target.size, "/etc/install.inf") != -1)
	{
	    sourcemounted = SCR::Read (.etc.install_inf.Sourcemounted) == "1";

	    autoinst = SCR::Read (.etc.install_inf.AutoYaST) != nil;

	    repair   = SCR::Read (.etc.install_inf.Repair )  != nil;

	    live_eval = SCR::Read (.etc.install_inf.Demo) == "1";

	    text = SCR::Read (.etc.install_inf.Textmode) == "1";

	    manual = SCR::Read (.etc.install_inf.Manual) == "1";
	    // we might be in 'continue' mode (after first time booting into
	    // installed system). Give the user a chance to enter "manual"
	    // at kernel command line to be asked for module loading
	    // because of #24462, network modules are loaded automagically.
	    // This won't harm for 99.99% but you never know ...
	    if (!manual)
	    {
		string tmp = (string)SCR::Read (.target.string, "/proc/cmdline");
		if (tmp != nil && contains (splitstring (tmp, " \n"), "manual"))
		{
		    manual = true;
		}
	    }

	    serial_console = SCR::Read (.etc.install_inf.Console) != nil;

	    braille = SCR::Read (.etc.install_inf.Braille) != nil;

	    vnc = SCR::Read (.etc.install_inf.VNC) == "1";

	    usessh = SCR::Read (.etc.install_inf.UseSSH) == "1";

	    boot = (string)SCR::Read (.etc.install_inf.InstMode);
	    if (boot == nil) boot = "cd";
	}

	// disable X11 setup after initial boot
	if (serial_console || vnc || usessh)
	{
	    x11_setup_needed = false;
	}

    }
}
